application todo

title "Zodo"
database "zodo"

import mobl

entity Task {
  name        : String (searchable)
  description : Text   (searchable)
  done        : Bool
}

screen addTask() {
  var newTask : Task = Task{}

  backButton("Back", onclick={ screen return; })
  basicView("Add") {
    inputs {
      inputString(newTask.name, placeholder="Task name")
    }
    button("Add", onclick={
      add(newTask);
      screen return;
    })
  }
}

screen editTask(t : Task) {
  topRightButton("Done", onclick={ screen return; })
  basicView("Edit") {
    inputs {
      inputString(t.name, placeholder="Task name")
      inputString(t.description, placeholder="Task description")
    }
    button("Delete", onclick={
      remove(t);
      screen return;
    })
  }
}

screen root() {
  template defaultView(t : Task, editing : Bool) {
    item(onswipe={ editing = true; }) {
      inputCheckbox(t.done, onclick={}) " "
      outputString(t.name)
    }
  }
  template editView(t : Task, editing : Bool) {
    item(onswipe={ editing = false; }) {
      inputCheckbox(t.done, onclick={}) " "
      outputString(t.name)
      sideButton("Delete", onclick={ remove(t); })
    }
  }
  topRightButton("Add", onclick={ addTask(); })
  var searchQuery = ""
  basicView("Tasks") {
    searchbox(searchQuery)
    group {
      list(t in Task.searchPrefix(searchQuery)) {
        var editing = false
        (editing ? editView : defaultView)(t, editing)
      }
    }
  }
}