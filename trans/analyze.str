module analyze

imports
  libstratego-lib
  include/MoBL
  lib/editor-common
  declare
  lookup
  type
  rename
  normalize
  desugar
  mobl
  resolve
  generation/compile

rules

  // Analysis: does a topdown traversal of the tree,
  // and try to apply the record-entity rule.
  analyze =
    (?Module(qid, def*) <+ ?Application(qid, _, def*))
    ; {| ModuleName, Imports
       : rules ( ModuleName := qid )
       ; import-all
       ; normalize-all
       ; alltd(add-tl-namespace)
       ; declare-all
       ; rename-all
       ; add-namespace-all
       ; declare-all
       ; rename-all
       ; add-namespace-all
       //; declare-all
       //; rename-all
         //; debug
       |}

  import-all =
    alltd(import-module)

  import-module =
    ?Import(qid)
    ; (<ParsedAndImported> qid
       ; rules ( Imports :+= qid )
    <+ rules ( ParsedAndImported : qid )
     //; debug(!"Importing: ")
     ; where(<open-import(\ path -> <resolve-file> <concat-strings> [path, ".mobl"] \, parse-file, externalize-module)> <qid-to-path> qid
             ; <declare-all> Module(qid, <id>))
     ; rules ( Imports :+= qid )
      )

  compile-import-module =
    ?Import(qid)
    ; where(path := <resolve-file> <concat-strings> [<qid-to-path> qid, ".mobl"]
        ; if not(<Compiled> qid <+ <is-newer> (<concat-strings; guarantee-extension(|"js")> [<OutputPath>, "/", <qid-to-path> qid], path)) then
            <parse-file> path
            ; compile
          end
      )

  lookup-import-module =
    ?Import(qid)
    ; (<ParsedAndImported> qid
    <+ rules ( ParsedAndImported : qid )
     //; debug(!"Importing: ")
     ; where(<open-import(\ path -> <resolve-file> <concat-strings> [path, ".mobl"] \, parse-file, externalize-module)> <qid-to-path> qid
             ; <declare-all> Module(qid, <id>))
      )

  externalize-module :
    Module(qid, def*) -> def2*
    with def2* := <analyze; desugar-all; ?Module(_, <id>); filter(definition-to-external)>

  externalize-module :
    Application(qid, _, def*) -> def2*
    with def2* := <analyze; desugar-all; ?Application(_, _, <id>); filter(definition-to-external)>

